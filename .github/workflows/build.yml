name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    runs-on: ${{ matrix.os }}
    
    env:
      CONAN_USER_HOME: "~/co/"

    steps:
    - uses: actions/checkout@v2

    - name: Check Python
      run: python --version

    - name: Cache Conan modules
      id: cache-conan
      uses: actions/cache@v1
      env:
        cache-name: cache-conan-modules
      with:
        path: ${{ env.CONAN_USER_HOME }}
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('conanfile.py') }}
        restore-keys: ${{ runner.os }}-build-${{ env.cache-name }}-
     
    - name: Get Conan
      run: |
        pip3 install wheel setuptools
        pip3 install conan --upgrade
        
    - name: Fix Path on Ubuntu
      if: matrix.os == 'ubuntu-latest'
      run: echo "::add-path::/home/runner/.local/bin"

    - name: Check Conan
      run: conan --version

    - name: Add bincrafters remote
      if: steps.cache-conan.outputs.cache-hit != 'true'
      run: conan remote add bincrafters "https://api.bintray.com/conan/bincrafters/public-conan"
      
    - name: Clean up Conan
      if: steps.cache-conan.outputs.cache-hit != 'false'
      run: conan remove -f "*" --system-reqs

    - name: Check CMake
      run: cmake --version
        
    - name: Configure build
      run: mkdir build && cd build && cmake -DCMAKE_BUILD_TYPE=Release ..

    - name: Clean up Conan
      run: conan remove -f "*" --builds --src --system-reqs
  
    - name: Build
      run: cmake --build build
